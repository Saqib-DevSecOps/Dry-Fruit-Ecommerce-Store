# Generated by Django 4.2 on 2024-03-24 21:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import src.administration.admins.models
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('street_address', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(choices=[('USA', 'USA'), ('Canada', 'Canada')], max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('total', models.FloatField(default=0)),
                ('paid', models.FloatField(default=0)),
                ('shipping', models.CharField(choices=[('Free', 'Free'), ('Normal', 'Normal'), ('Premium', 'Premium')], default='Free', max_length=15)),
                ('stripe_payment_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('shipping', 'Shipping'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sku', models.CharField(help_text="stock-keeping unit (SKU) is a store or catalog's product and service identification code", max_length=255)),
                ('thumbnail_image', models.ImageField(help_text='Thumbnail image for your product tis image will be visible on marketplace', null=True, upload_to='vendor/inventory/product/thumbnail')),
                ('title', models.CharField(help_text='Product name or title', max_length=255)),
                ('manufacturer_brand', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True, help_text='Small description for your project', null=True)),
                ('content', tinymce.models.HTMLField(blank=True, help_text='Full description for your project', null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('promotional', models.CharField(blank=True, choices=[('new', 'New'), ('hot', 'Hot')], max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[src.administration.admins.models.positive_validator])),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Total quantity of product', validators=[src.administration.admins.models.quantity_validator])),
                ('discount', models.PositiveIntegerField(default=0, help_text='discount  in percentage', validators=[src.administration.admins.models.discount_validator], verbose_name='Discount in %')),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('total_sales', models.PositiveIntegerField(default=0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('average_review', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('height', models.FloatField(blank=True, help_text='measurement in inches', null=True, validators=[src.administration.admins.models.positive_validator])),
                ('width', models.FloatField(blank=True, help_text='measurement in inches', null=True, validators=[src.administration.admins.models.positive_validator])),
                ('length', models.FloatField(blank=True, help_text='measurement in inches', null=True, validators=[src.administration.admins.models.positive_validator])),
                ('weight', models.FloatField(blank=True, help_text='weight in grams', null=True, validators=[src.administration.admins.models.positive_validator])),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.tag')),
            ],
            options={
                'verbose_name_plural': 'Product Tags',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.SmallIntegerField(default=1)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
            ],
            options={
                'verbose_name_plural': 'Product Rating',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='vendor/inventory/product/images')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
            ],
            options={
                'verbose_name_plural': 'Product Images',
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(through='admins.ProductTag', to='admins.tag'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.blogcategory')),
            ],
            options={
                'verbose_name_plural': 'Post Categories',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='books/images/posts')),
                ('slug', models.SlugField(unique=True)),
                ('content', tinymce.models.HTMLField()),
                ('read_time', models.PositiveIntegerField(default=0, help_text='read time in minutes')),
                ('visits', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('publish', 'Publish')], default='publish', max_length=15)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admins.blogcategory')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
    ]
